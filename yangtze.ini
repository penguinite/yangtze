[web]
port=8080

# Whether or not to show replies under
# a post.
comments_enabled=true

# Where posts will be shown.
# The default is "posts", so if you go to [YOUR SITE]/posts/
# you will be able to see your own posts in the dedicated page.
#
# If this is empty then the landing page becomes
# the post display page.
posts_slug="posts"

# Which user to show posts from.
# fedi_user should be the username
# fedi_domain should be the instance where your account resides
#
# If fedi_user is empty but fedi_domain has your instance then
# yangtze will try to display all local posts.
fedi_user=""
fedi_domain=""

# Your fediverse server may or may not have disabled
# API access to the public, in which case, it will need
# a couple keys and whatnot.
# You can automatically generate these by running
# the "yangtze_keygen" program
# TODO: Implement "yangtze_keygen"
client_id=""
scopes=""
client_secret=""
oauth_code=""
oauth_token=""

[custom]
# Anything you add here will be accessible through the templates.
# Every non-string value will be converted to a string value (Except for tables)
# Lists will be converted to paragraphs.
home="Hello World!"

# You could also insert HTML here! Nothing is sanitized :)
# In fact, just to make life a little bit easier, I have added
# in a bit of a comfort feature called "read in whatever file you want from the filesystem"
# The way it works is you wrap your custom value in dollar signs, and Yangtze will
#
# You can use this feature to expose your SSL private keys if your security is really awful.
# Or you could embed HTML into the templates engine, so you can add $head$, $body$ and so on.
# Just to make life a little bit easier...
#
# Here is an example:
head="$yangtze.ini$"
#
# Now whenever you use "$head$" in a template, Yangtze will display data from the config file.
# 
# Just be sure not to use this too much, and also to configure caching
# since it is processed every request.